@{
    ViewData["Title"] = "Bucket List";

    // Groups bucket and sum amount into dictionary
    var bucketAmounts = ((IEnumerable<TransactionModel>)Model)
        .GroupBy(m => m.BucketCategory ?? "Uncategorized") 
        .ToDictionary(g => g.Key, g => g.Sum(m => m.Amount));

    var dataPoints = bucketAmounts.Select(b => new { label = b.Key, y = b.Value }).ToList();
}

<div class="text-center">
    <h1 class="display-4">Report</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Bucket</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bucket in bucketAmounts)
            {
                <tr>
                    <td>@bucket.Key</td>
                    <td>@bucket.Value</td>
                </tr>
            }
        </tbody>
    </table>
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
</div>

<!-- Include the CanvasJS library -->
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

<!-- Scripts for the pie chart -->
<script>
    window.onload = function() {
        var chart = new CanvasJS.Chart("chartContainer", {
            animationEnabled: true,
            title: {
                text: "Expenses by Transaction Type"
            },
            data: [{
                type: "pie",
                yValueFormatString: "#,##0.00\"\"",
                indexLabel: "{label} ({y})",
                dataPoints: @Html.Raw(Json.Serialize(dataPoints))
            }]
        });
        chart.render();
    }
</script>